---
name: Release
on:
  pull_request:
  push:
    branches:
      - "*"
jobs:
  build:
    permissions:
      contents: write
    continue-on-error: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: cargo-bins/cargo-binstall@main

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: clippy rustfmt

      # Install LLVM 19
      - name: Install LLVM 18
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          UBUNTU_CODENAME=$(lsb_release -cs)
          echo "deb [signed-by=/usr/share/keyrings/llvm-archive-keyring.gpg] http://apt.llvm.org/$UBUNTU_CODENAME/ llvm-toolchain-$UBUNTU_CODENAME-19 main" | sudo tee /etc/apt/sources.list.d/llvm.list
          curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor -o /usr/share/keyrings/llvm-archive-keyring.gpg
          sudo apt-get update
          sudo apt-get install -y llvm-19 llvm-19-dev llvm-19-tools llvm-19-dev

      - name: Install the dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y podman binutils-aarch64-linux-gnu musl-tools libc6-amd64-cross libc6
          cargo binstall -y cross
          cargo binstall -y bpf-linker

      - name: Build oryx-ebpf
        run: cargo xtask build-ebpf --release

      - name: Build for x86_64 glibc
        env:
          CROSS_CONTAINER_ENGINE: podman
        run: |
          cross build --target aarch64-unknown-linux-gnu --release
          cp target/x86_64-unknown-linux-gnu/release/oryx oryx-x86_64-unknown-linux-gnu

      - name: Build for arm64 musl
        env:
          CROSS_CONTAINER_ENGINE: podman
        run: |
          cross build --target aarch64-unknown-linux-musl --release
          cp target/aarch64-unknown-linux-musl/release/oryx oryx-aarch64-unknown-linux-musl

      - name: Build for x86_64 musl
        env:
          CROSS_CONTAINER_ENGINE: podman
        run: |
          cross build --target x86_64-unknown-linux-musl --release
          cp target/x86_64-unknown-linux-musl/release/oryx oryx-x86_64-unknown-linux-musl
